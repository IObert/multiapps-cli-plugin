package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteServiceFilesParams creates a new DeleteServiceFilesParams object
// with the default values initialized.
func NewDeleteServiceFilesParams() *DeleteServiceFilesParams {
	var ()
	return &DeleteServiceFilesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteServiceFilesParamsWithTimeout creates a new DeleteServiceFilesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteServiceFilesParamsWithTimeout(timeout time.Duration) *DeleteServiceFilesParams {
	var ()
	return &DeleteServiceFilesParams{

		timeout: timeout,
	}
}

// NewDeleteServiceFilesParamsWithContext creates a new DeleteServiceFilesParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteServiceFilesParamsWithContext(ctx context.Context) *DeleteServiceFilesParams {
	var ()
	return &DeleteServiceFilesParams{

		Context: ctx,
	}
}

/*DeleteServiceFilesParams contains all the parameters to send to the API endpoint
for the delete service files operation typically these are written to a http.Request
*/
type DeleteServiceFilesParams struct {

	/*ServiceID*/
	ServiceID string

	timeout time.Duration
	Context context.Context
}

// WithTimeout adds the timeout to the delete service files params
func (o *DeleteServiceFilesParams) WithTimeout(timeout time.Duration) *DeleteServiceFilesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete service files params
func (o *DeleteServiceFilesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete service files params
func (o *DeleteServiceFilesParams) WithContext(ctx context.Context) *DeleteServiceFilesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete service files params
func (o *DeleteServiceFilesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithServiceID adds the serviceID to the delete service files params
func (o *DeleteServiceFilesParams) WithServiceID(serviceID string) *DeleteServiceFilesParams {
	o.SetServiceID(serviceID)
	return o
}

// SetServiceID adds the serviceId to the delete service files params
func (o *DeleteServiceFilesParams) SetServiceID(serviceID string) {
	o.ServiceID = serviceID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteServiceFilesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param serviceId
	if err := r.SetPathParam("serviceId", o.ServiceID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
