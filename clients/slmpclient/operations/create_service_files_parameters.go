package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"os"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewCreateServiceFilesParams creates a new CreateServiceFilesParams object
// with the default values initialized.
func NewCreateServiceFilesParams() *CreateServiceFilesParams {
	var ()
	return &CreateServiceFilesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateServiceFilesParamsWithTimeout creates a new CreateServiceFilesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateServiceFilesParamsWithTimeout(timeout time.Duration) *CreateServiceFilesParams {
	var ()
	return &CreateServiceFilesParams{

		timeout: timeout,
	}
}

// NewCreateServiceFilesParamsWithContext creates a new CreateServiceFilesParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateServiceFilesParamsWithContext(ctx context.Context) *CreateServiceFilesParams {
	var ()
	return &CreateServiceFilesParams{

		Context: ctx,
	}
}

/*CreateServiceFilesParams contains all the parameters to send to the API endpoint
for the create service files operation typically these are written to a http.Request
*/
type CreateServiceFilesParams struct {

	/*Files
	  contains multiple files separated by a boundary according to RFC 1867 and RFC 2854. S. also File Upload Specification.

	*/
	Files os.File
	/*ServiceID*/
	ServiceID string

	timeout time.Duration
	Context context.Context
}

// WithTimeout adds the timeout to the create service files params
func (o *CreateServiceFilesParams) WithTimeout(timeout time.Duration) *CreateServiceFilesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create service files params
func (o *CreateServiceFilesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create service files params
func (o *CreateServiceFilesParams) WithContext(ctx context.Context) *CreateServiceFilesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create service files params
func (o *CreateServiceFilesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithFiles adds the files to the create service files params
func (o *CreateServiceFilesParams) WithFiles(files os.File) *CreateServiceFilesParams {
	o.SetFiles(files)
	return o
}

// SetFiles adds the files to the create service files params
func (o *CreateServiceFilesParams) SetFiles(files os.File) {
	o.Files = files
}

// WithServiceID adds the serviceID to the create service files params
func (o *CreateServiceFilesParams) WithServiceID(serviceID string) *CreateServiceFilesParams {
	o.SetServiceID(serviceID)
	return o
}

// SetServiceID adds the serviceId to the create service files params
func (o *CreateServiceFilesParams) SetServiceID(serviceID string) {
	o.ServiceID = serviceID
}

// WriteToRequest writes these params to a swagger request
func (o *CreateServiceFilesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// form file param files
	if err := r.SetFileParam("files", &o.Files); err != nil {
		return err
	}

	// path param serviceId
	if err := r.SetPathParam("serviceId", o.ServiceID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
