package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetConfigParameterParams creates a new GetConfigParameterParams object
// with the default values initialized.
func NewGetConfigParameterParams() *GetConfigParameterParams {
	var ()
	return &GetConfigParameterParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetConfigParameterParamsWithTimeout creates a new GetConfigParameterParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetConfigParameterParamsWithTimeout(timeout time.Duration) *GetConfigParameterParams {
	var ()
	return &GetConfigParameterParams{

		timeout: timeout,
	}
}

// NewGetConfigParameterParamsWithContext creates a new GetConfigParameterParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetConfigParameterParamsWithContext(ctx context.Context) *GetConfigParameterParams {
	var ()
	return &GetConfigParameterParams{

		Context: ctx,
	}
}

/*GetConfigParameterParams contains all the parameters to send to the API endpoint
for the get config parameter operation typically these are written to a http.Request
*/
type GetConfigParameterParams struct {

	/*ParameterID*/
	ParameterID string

	timeout time.Duration
	Context context.Context
}

// WithTimeout adds the timeout to the get config parameter params
func (o *GetConfigParameterParams) WithTimeout(timeout time.Duration) *GetConfigParameterParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get config parameter params
func (o *GetConfigParameterParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get config parameter params
func (o *GetConfigParameterParams) WithContext(ctx context.Context) *GetConfigParameterParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get config parameter params
func (o *GetConfigParameterParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithParameterID adds the parameterID to the get config parameter params
func (o *GetConfigParameterParams) WithParameterID(parameterID string) *GetConfigParameterParams {
	o.SetParameterID(parameterID)
	return o
}

// SetParameterID adds the parameterId to the get config parameter params
func (o *GetConfigParameterParams) SetParameterID(parameterID string) {
	o.ParameterID = parameterID
}

// WriteToRequest writes these params to a swagger request
func (o *GetConfigParameterParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param parameterId
	if err := r.SetPathParam("parameterId", o.ParameterID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
