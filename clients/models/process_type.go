package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ProcessType process type
// swagger:model process_type
type ProcessType string

const (
	ProcessTypeDeploy          ProcessType = "deploy"
	ProcessTypeUndeploy        ProcessType = "undeploy"
	ProcessTypeBlueGreenDeploy ProcessType = "blue-green-deploy"
)

// for schema
var processTypeEnum []interface{}

func (m ProcessType) validateProcessTypeEnum(path, location string, value ProcessType) error {
	if processTypeEnum == nil {
		var res []ProcessType
		if err := json.Unmarshal([]byte(`["deploy","undeploy","blue-green-deploy"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			processTypeEnum = append(processTypeEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, processTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this process type
func (m ProcessType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateProcessTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
