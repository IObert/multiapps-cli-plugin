package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// SlpTaskStateEnum slp task state enum
// swagger:model slp_task_state_enum
type SlpTaskStateEnum string

const (
	SlpTaskStateEnumSLPTASKSTATEINITIAL        SlpTaskStateEnum = "SLP_TASK_STATE_INITIAL"
	SlpTaskStateEnumSLPTASKSTATERUNNING        SlpTaskStateEnum = "SLP_TASK_STATE_RUNNING"
	SlpTaskStateEnumSLPTASKSTATEERROR          SlpTaskStateEnum = "SLP_TASK_STATE_ERROR"
	SlpTaskStateEnumSLPTASKSTATEDIALOG         SlpTaskStateEnum = "SLP_TASK_STATE_DIALOG"
	SlpTaskStateEnumSLPTASKSTATEFINISHED       SlpTaskStateEnum = "SLP_TASK_STATE_FINISHED"
	SlpTaskStateEnumSLPTASKSTATEABORTED        SlpTaskStateEnum = "SLP_TASK_STATE_ABORTED"
	SlpTaskStateEnumSLPTASKSTATESKIPPED        SlpTaskStateEnum = "SLP_TASK_STATE_SKIPPED"
	SlpTaskStateEnumSLPTASKSTATEACTIONREQUIRED SlpTaskStateEnum = "SLP_TASK_STATE_ACTION_REQUIRED"
	SlpTaskStateEnumSLPTASKSTATEBREAKPOINT     SlpTaskStateEnum = "SLP_TASK_STATE_BREAKPOINT"
	SlpTaskStateEnumSLPTASKSTATESTOPPED        SlpTaskStateEnum = "SLP_TASK_STATE_STOPPED"
)

// for schema
var slpTaskStateEnumEnum []interface{}

func (m SlpTaskStateEnum) validateSlpTaskStateEnumEnum(path, location string, value SlpTaskStateEnum) error {
	if slpTaskStateEnumEnum == nil {
		var res []SlpTaskStateEnum
		if err := json.Unmarshal([]byte(`["SLP_TASK_STATE_INITIAL","SLP_TASK_STATE_RUNNING","SLP_TASK_STATE_ERROR","SLP_TASK_STATE_DIALOG","SLP_TASK_STATE_FINISHED","SLP_TASK_STATE_ABORTED","SLP_TASK_STATE_SKIPPED","SLP_TASK_STATE_ACTION_REQUIRED","SLP_TASK_STATE_BREAKPOINT","SLP_TASK_STATE_STOPPED"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			slpTaskStateEnumEnum = append(slpTaskStateEnumEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, slpTaskStateEnumEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this slp task state enum
func (m SlpTaskStateEnum) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSlpTaskStateEnumEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
